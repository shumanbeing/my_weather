[{"/Users/SHU/dev/my_weather/src/components/Footer.tsx":"1","/Users/SHU/dev/my_weather/src/components/Header.tsx":"2","/Users/SHU/dev/my_weather/src/App.tsx":"3","/Users/SHU/dev/my_weather/src/serviceWorker.ts":"4","/Users/SHU/dev/my_weather/src/components/Main.tsx":"5","/Users/SHU/dev/my_weather/src/index.tsx":"6","/Users/SHU/dev/my_weather/src/features/counter/counterSlice.ts":"7","/Users/SHU/dev/my_weather/src/components/main.components/WeatherCard.tsx":"8","/Users/SHU/dev/my_weather/src/components/main.components/AddCard.tsx":"9","/Users/SHU/dev/my_weather/src/components/SideMenu.tsx":"10","/Users/SHU/dev/my_weather/src/components/DetailsPage.tsx":"11","/Users/SHU/dev/my_weather/src/components/details.components/MainWeatherCard.tsx":"12","/Users/SHU/dev/my_weather/src/components/details.components/CardHeaderContainer.tsx":"13","/Users/SHU/dev/my_weather/src/components/details.components/CardBodyContainer.tsx":"14","/Users/SHU/dev/my_weather/src/components/details.components/TwitterFeed.tsx":"15","/Users/SHU/dev/my_weather/src/components/details.components/ForecastNext5Days.tsx":"16","/Users/SHU/dev/my_weather/src/components/details.components/DayWeatherContainer.tsx":"17"},{"size":213,"mtime":1608874514187,"results":"18","hashOfConfig":"19"},{"size":2966,"mtime":1608975562009,"results":"20","hashOfConfig":"19"},{"size":757,"mtime":1609488932920,"results":"21","hashOfConfig":"19"},{"size":5424,"mtime":1608343249653,"results":"22","hashOfConfig":"19"},{"size":448,"mtime":1609204547129,"results":"23","hashOfConfig":"19"},{"size":648,"mtime":1608343249652,"results":"24","hashOfConfig":"19"},{"size":1851,"mtime":1608343249652,"results":"25","hashOfConfig":"19"},{"size":3435,"mtime":1609221157066,"results":"26","hashOfConfig":"19"},{"size":475,"mtime":1609301146447,"results":"27","hashOfConfig":"19"},{"size":2530,"mtime":1609330034208,"results":"28","hashOfConfig":"19"},{"size":909,"mtime":1609491157456,"results":"29","hashOfConfig":"19"},{"size":384,"mtime":1609493509965,"results":"30","hashOfConfig":"19"},{"size":182,"mtime":1609494250611,"results":"31","hashOfConfig":"19"},{"size":337,"mtime":1609494310339,"results":"32","hashOfConfig":"19"},{"size":158,"mtime":1609494164614,"results":"33","hashOfConfig":"19"},{"size":221,"mtime":1609494446819,"results":"34","hashOfConfig":"19"},{"size":181,"mtime":1609494585657,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13jcglp",{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/SHU/dev/my_weather/src/components/Footer.tsx",[],"/Users/SHU/dev/my_weather/src/components/Header.tsx",["75","76","77","78"],"import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Switch from '@material-ui/core/Switch';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport styles from './Header.module.scss';\nimport { Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  })\n);\n\nconst Header: React.FC = () => {\n  const [state, setState] = React.useState({\n    checkedA: false,\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <Grid container className={styles.container}>\n        <Grid item xs={12} sm={4}>\n          <div className={styles.left_section}>\n            <IconButton\n              edge=\"start\"\n              className={styles.menu_button}\n              aria-label=\"menu\"\n            >\n              <MenuIcon className={styles.menu_icon} />\n            </IconButton>\n\n            <svg className={styles.logo_icon} viewBox=\"150.3 22.2 213.7 42.8\">\n              <path\n                fill=\"#00ff9b\"\n                d=\"M150.3 65V22.2L193 65z\"\n                data-name=\"Path 1\"\n              />\n              <path\n                fill=\"#003eff\"\n                d=\"M193.1 65h-42.8L193 22.2z\"\n                data-name=\"Path 2\"\n              />\n              <text\n                className={styles.logo_text}\n                fill=\"#432c85\"\n                font-family=\"SegoeUI-Semibold,Segoe UI\"\n                font-size=\"30\"\n                font-weight=\"600\"\n                letter-spacing=\".1em\"\n                transform=\"translate(237 56)\"\n              >\n                <tspan x=\"0\" y=\"0\">\n                  Minimis\n                </tspan>\n              </text>\n            </svg>\n          </div>\n        </Grid>\n\n        <Grid item xs={12} sm={4} className={styles.middle_section}>\n          <h3 className={styles.date_text}>Today</h3>\n        </Grid>\n\n        <Grid item xs={12} sm={4} className={styles.right_section}>\n          <div className={styles.mode_toggle_container}>\n            <span className={styles.mode_toggle_text}>Light</span>\n            <Switch\n              checked={state.checkedA}\n              onChange={handleChange}\n              name=\"checkedA\"\n              className={styles.toggle_switch}\n              // inputProps={{ 'aria-label': 'secondary checkbox' }}\n            />\n            <span className={styles.mode_toggle_text}>Dark</span>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Header;\n","/Users/SHU/dev/my_weather/src/App.tsx",["79","80","81","82","83","84"],"/Users/SHU/dev/my_weather/src/serviceWorker.ts",["85","86"],"// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","/Users/SHU/dev/my_weather/src/components/Main.tsx",[],"/Users/SHU/dev/my_weather/src/index.tsx",[],[],"/Users/SHU/dev/my_weather/src/features/counter/counterSlice.ts",["87"],"import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AppThunk, RootState } from '../../app/store';\r\n\r\ninterface CounterState {\r\n  value: number;\r\n}\r\n\r\nconst initialState: CounterState = {\r\n  value: 0,\r\n};\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    // Use the PayloadAction type to declare the contents of `action.payload`\r\n    incrementByAmount: (state, action: PayloadAction<number>) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = (amount: number): AppThunk => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectCount = (state: RootState) => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","/Users/SHU/dev/my_weather/src/components/main.components/WeatherCard.tsx",["88"],"import React from 'react';\n\nimport styles from './WeatherCard.module.scss';\n\nconst WeatherCard = () => {\n  return (\n    <div className={styles.wrapper}>\n      <span className={styles.city_name}>Paris</span>\n      <div className={styles.weather_icon_container}>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"275.522\"\n          height=\"274.091\"\n          viewBox=\"0 0 275.522 274.091\"\n        >\n          <g\n            id=\"cloudy_icon\"\n            data-name=\"cloudy icon\"\n            transform=\"translate(-2352.885 1633.091)\"\n          >\n            <circle\n              id=\"Ellipse_23\"\n              data-name=\"Ellipse 23\"\n              cx=\"137\"\n              cy=\"137\"\n              r=\"137\"\n              transform=\"translate(2354 -1633)\"\n              fill=\"#fff\"\n            />\n            <path\n              id=\"Subtraction_1\"\n              data-name=\"Subtraction 1\"\n              d=\"M-1755.089,1486.6l0,0a37.216,37.216,0,0,0,8.359-23.415c0-22.035-19.784-39.962-44.1-39.962-1.124,0-2.253.038-3.354.113v-.113h-.495a39.755,39.755,0,0,0-39.466-33.651,40.146,40.146,0,0,0-9.916,1.239,39.916,39.916,0,0,0-35.3-21.22,40.108,40.108,0,0,0-38.45,29.04,137.432,137.432,0,0,1-7.82-45.866,138.777,138.777,0,0,1,2.8-27.764,137.066,137.066,0,0,1,8.027-25.859,137.781,137.781,0,0,1,12.7-23.4,138.758,138.758,0,0,1,16.822-20.388,138.764,138.764,0,0,1,20.388-16.822,137.789,137.789,0,0,1,23.4-12.7,137.072,137.072,0,0,1,25.859-8.027,138.775,138.775,0,0,1,27.764-2.8,138.775,138.775,0,0,1,27.764,2.8,137.067,137.067,0,0,1,25.859,8.027,137.785,137.785,0,0,1,23.4,12.7,138.759,138.759,0,0,1,20.388,16.822,138.741,138.741,0,0,1,16.822,20.388,137.784,137.784,0,0,1,12.7,23.4,137.067,137.067,0,0,1,8.027,25.859,138.777,138.777,0,0,1,2.8,27.764,137.411,137.411,0,0,1-7.929,46.175,137.23,137.23,0,0,1-21.964,39.522,138.173,138.173,0,0,1-33.261,30.133,136.764,136.764,0,0,1-41.819,18.007Z\"\n              transform=\"translate(4278.521 -2848.091)\"\n              fill=\"#ffde17\"\n            />\n          </g>\n        </svg>\n\n        {/* <svg>雨</svg> */}\n        {/* <svg>雷</svg>\n        <svg>晴</svg>\n        <svg>雪</svg> */}\n      </div>\n\n      {/* 気温と天気 */}\n      <div className={styles.temperature_container}>\n        <span className={styles.temperature_number_text}>7</span>\n        <span className={styles.temperature_metric_text}>°</span>\n        <span className={styles.weather_condition_text}>cloudy</span>\n      </div>\n\n      {/* 最低気温、最高気温 */}\n      <div className={styles.min_max_container}>\n        <div className={styles.min_container}>\n          <svg className={styles.min_arrow_icon} viewBox=\"188.5 807 21 21\">\n            <path\n              fill=\"#00ff9b\"\n              d=\"M209.5 817.5h-21L199 828z\"\n              data-name=\"Min Arrow\"\n            />\n          </svg>\n          <span className={styles.min_temperature_text}>11</span>\n          <span className={styles.min_text}>Min</span>\n        </div>\n\n        <div className={styles.max_container}>\n          <svg className={styles.max_arrow_icon} viewBox=\"449.5 820 21 21\">\n            <path\n              fill=\"red\"\n              d=\"M449.5 830.5h21L460 820z\"\n              data-name=\"Max Arrow\"\n            />\n          </svg>\n          <span className={styles.max_temperature_text}>22</span>\n          <span className={styles.max_text}>Max</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WeatherCard;\n","/Users/SHU/dev/my_weather/src/components/main.components/AddCard.tsx",["89"],"/Users/SHU/dev/my_weather/src/components/SideMenu.tsx",["90","91","92","93","94","95","96"],"/Users/SHU/dev/my_weather/src/components/DetailsPage.tsx",["97"],"/Users/SHU/dev/my_weather/src/components/details.components/MainWeatherCard.tsx",["98"],"/Users/SHU/dev/my_weather/src/components/details.components/CardHeaderContainer.tsx",["99","100"],"/Users/SHU/dev/my_weather/src/components/details.components/CardBodyContainer.tsx",["101","102"],"/Users/SHU/dev/my_weather/src/components/details.components/TwitterFeed.tsx",["103","104"],"/Users/SHU/dev/my_weather/src/components/details.components/ForecastNext5Days.tsx",["105","106"],"/Users/SHU/dev/my_weather/src/components/details.components/DayWeatherContainer.tsx",["107","108"],{"ruleId":"109","severity":1,"message":"110","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":14},{"ruleId":"109","severity":1,"message":"113","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":15},{"ruleId":"109","severity":1,"message":"114","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":18},{"ruleId":"109","severity":1,"message":"115","line":13,"column":7,"nodeType":"111","messageId":"112","endLine":13,"endColumn":16},{"ruleId":"109","severity":1,"message":"116","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":16},{"ruleId":"109","severity":1,"message":"117","line":5,"column":8,"nodeType":"111","messageId":"112","endLine":5,"endColumn":14},{"ruleId":"109","severity":1,"message":"118","line":6,"column":8,"nodeType":"111","messageId":"112","endLine":6,"endColumn":12},{"ruleId":"109","severity":1,"message":"119","line":7,"column":8,"nodeType":"111","messageId":"112","endLine":7,"endColumn":14},{"ruleId":"109","severity":1,"message":"120","line":10,"column":10,"nodeType":"111","messageId":"112","endLine":10,"endColumn":19},{"ruleId":"109","severity":1,"message":"121","line":10,"column":21,"nodeType":"111","messageId":"112","endLine":10,"endColumn":25},{"ruleId":"122","severity":1,"message":"123","line":28,"column":8,"nodeType":"124","messageId":"125","endLine":28,"endColumn":42},{"ruleId":"122","severity":1,"message":"123","line":136,"column":8,"nodeType":"124","messageId":"125","endLine":136,"endColumn":29},{"ruleId":"122","severity":1,"message":"123","line":48,"column":28,"nodeType":"126","messageId":"125","endLine":48,"endColumn":49},{"ruleId":"122","severity":1,"message":"123","line":5,"column":21,"nodeType":"126","messageId":"125","endLine":5,"endColumn":26},{"ruleId":"122","severity":1,"message":"123","line":5,"column":17,"nodeType":"126","messageId":"125","endLine":5,"endColumn":22},{"ruleId":"109","severity":1,"message":"127","line":3,"column":10,"nodeType":"111","messageId":"112","endLine":3,"endColumn":20},{"ruleId":"109","severity":1,"message":"128","line":8,"column":8,"nodeType":"111","messageId":"112","endLine":8,"endColumn":16},{"ruleId":"109","severity":1,"message":"129","line":9,"column":8,"nodeType":"111","messageId":"112","endLine":9,"endColumn":20},{"ruleId":"109","severity":1,"message":"130","line":10,"column":8,"nodeType":"111","messageId":"112","endLine":10,"endColumn":20},{"ruleId":"109","severity":1,"message":"131","line":11,"column":8,"nodeType":"111","messageId":"112","endLine":11,"endColumn":17},{"ruleId":"109","severity":1,"message":"132","line":12,"column":8,"nodeType":"111","messageId":"112","endLine":12,"endColumn":16},{"ruleId":"122","severity":1,"message":"123","line":19,"column":18,"nodeType":"126","messageId":"125","endLine":19,"endColumn":23},{"ruleId":"122","severity":1,"message":"123","line":6,"column":21,"nodeType":"126","messageId":"125","endLine":6,"endColumn":26},{"ruleId":"122","severity":1,"message":"123","line":7,"column":25,"nodeType":"126","messageId":"125","endLine":7,"endColumn":30},{"ruleId":"109","severity":1,"message":"133","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":14},{"ruleId":"122","severity":1,"message":"123","line":4,"column":29,"nodeType":"126","messageId":"125","endLine":4,"endColumn":34},{"ruleId":"109","severity":1,"message":"133","line":6,"column":8,"nodeType":"111","messageId":"112","endLine":6,"endColumn":14},{"ruleId":"122","severity":1,"message":"123","line":8,"column":27,"nodeType":"126","messageId":"125","endLine":8,"endColumn":32},{"ruleId":"109","severity":1,"message":"133","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":14},{"ruleId":"122","severity":1,"message":"123","line":4,"column":21,"nodeType":"126","messageId":"125","endLine":4,"endColumn":26},{"ruleId":"109","severity":1,"message":"133","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":14},{"ruleId":"122","severity":1,"message":"123","line":4,"column":27,"nodeType":"126","messageId":"125","endLine":4,"endColumn":32},{"ruleId":"109","severity":1,"message":"133","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":14},{"ruleId":"122","severity":1,"message":"123","line":5,"column":29,"nodeType":"126","messageId":"125","endLine":5,"endColumn":34},"@typescript-eslint/no-unused-vars","'AppBar' is defined but never used.","Identifier","unusedVar","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'useStyles' is assigned a value but never used.","'SideMenu' is defined but never used.","'Header' is defined but never used.","'Main' is defined but never used.","'Footer' is defined but never used.","'Container' is defined but never used.","'Grid' is defined but never used.","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","ArrowFunctionExpression","'makeStyles' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'styles' is defined but never used."]